# https://www.youtube.com/watch?v=BSRTUtvJSIk&ab_channel=CodeHelp-byBabbar
# https://www.youtube.com/watch?v=KFqhgQeQAXc&t=347s&ab_channel=CodeHelp-byBabbar
# class Solution:
#     def maxProfit(self, prices: List[int], fee: int) -> int:
#         pos = -prices[0]
#         profit = 0

#         for i in range(1, len(prices)):
#             pos = max(pos, profit-prices[i])
#             profit = max(profit, pos+prices[i]-fee)
#         return profit


class Solution:
    def maxProfit(self, prices: List[int], fee: int) -> int:
        profit = 0
        dp = [[-1 for _ in range(2)] for _ in range(len(prices))]

        def helper(index, buy, prices, dp):
            if index == len(prices):
                return 0
            if dp[index][buy] != -1:
                return dp[index][buy]
            if buy:
                profit = max((-prices[index] + helper(index+1, 0, prices, dp)), (0 + helper(index+1, 1, prices, dp)))
            else:
                profit = max((prices[index]+ helper(index+1, 1, prices, dp))-fee, (0 + helper(index+1, 0, prices, dp)))
            dp[index][buy] = profit
            return dp[index][buy]
        return helper(0, 1, prices, dp)